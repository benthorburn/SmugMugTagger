"""UK landscape tag enhancement module for SmugMug Tagger."""

# UK regions and their characteristic features
UK_REGIONS = {
    "Scotland": {
        "highlands": ["mountains", "rugged", "hills", "glens", "munro"],
        "islands": ["isle", "island", "hebrides", "skye", "mull", "iona", "islay", "arran"],
        "lochs": ["loch", "lake", "water", "reservoir"],
        "regions": ["highlands", "cairngorms", "trossachs", "glencoe", "torridon", "assynt", "sutherland", "perthshire"],
        "cities": ["edinburgh", "glasgow", "aberdeen", "inverness", "stirling", "dundee", "perth"],
        "landmarks": ["castle", "cathedral", "monument", "bridge", "ruins", "fort"]
    },
    "England": {
        "national_parks": ["lake district", "peak district", "yorkshire dales", "north york moors", "exmoor", "dartmoor", "south downs", "new forest"],
        "regions": ["cotswolds", "cornwall", "yorkshire", "devon", "cumbria", "northumberland", "norfolk", "suffolk", "kent"],
        "coastal": ["coast", "beach", "cliffs", "sea", "ocean", "harbor", "harbour", "port"],
        "landmarks": ["stonehenge", "hadrian's wall", "tower bridge", "big ben", "london eye"]
    },
    "Wales": {
        "mountains": ["snowdonia", "brecon beacons", "cambrian"],
        "coastal": ["pembrokeshire coast", "gower peninsula", "anglesey"],
        "landmarks": ["conwy castle", "caernarfon castle", "millennium stadium"]
    },
    "Ireland": {
        "regions": ["connemara", "burren", "wicklow", "donegal", "kerry", "antrim"],
        "landmarks": ["cliffs of moher", "giant's causeway", "ring of kerry"],
        "natural": ["bog", "moorland", "coast", "mountains"]
    }
}

# Landscape features to detect
LANDSCAPE_FEATURES = [
    "mountain", "hill", "valley", "glen", "coast", "beach", "cliff", "forest", 
    "woodland", "moor", "moorland", "heath", "loch", "lake", "river", "stream",
    "waterfall", "field", "farm", "rural", "urban", "city", "town", "village",
    "castle", "cathedral", "ruin", "ancient", "historic", "road", "path", "trail"
]

# Weather and lighting conditions
WEATHER_CONDITIONS = [
    "sunny", "cloudy", "overcast", "rain", "rainy", "storm", "stormy", "mist", 
    "misty", "fog", "foggy", "snow", "snowy", "frost", "frosty", "ice", "icy",
    "clear", "dramatic sky", "sunset", "sunrise", "dawn", "dusk", "golden hour",
    "blue hour", "night", "dark", "light", "shadow"
]

def enhance_uk_landscape_tags(location_data, vision_tags):
    """
    Enhance vision tags with UK-specific landscape tags based on location data.
    
    Args:
        location_data: Dictionary containing lat/lng data
        vision_tags: List of tags generated by Vision API
        
    Returns:
        Enhanced list of tags with UK-specific landscape information
    """
    enhanced_tags = list(vision_tags)  # Make a copy of the original tags
    
    # Convert all tags to lowercase for easier comparison
    lowercase_tags = [tag.lower() for tag in vision_tags]
    
    # If no location data, use vision tags to infer location
    if not location_data or not (location_data.get('lat') and location_data.get('lng')):
        # Check for region names in tags
        for country, regions in UK_REGIONS.items():
            country_detected = False
            if country.lower() in lowercase_tags:
                enhanced_tags.append(f"{country.lower()}")
                country_detected = True
            
            # Check for regions and features
            for region_type, region_list in regions.items():
                for region in region_list:
                    if any(region.lower() in tag for tag in lowercase_tags):
                        if country_detected:
                            enhanced_tags.append(f"{country.lower()} {region.lower()}")
                        enhanced_tags.append(region.lower())
    else:
        # Use latitude and longitude to determine region
        lat, lng = location_data.get('lat', 0), location_data.get('lng', 0)
        
        # Scotland: roughly 55.0° to 59.5° N, -6.0° to -1.0° W
        if 55.0 <= lat <= 59.5 and -6.0 <= lng <= -1.0:
            enhanced_tags.append("scotland")
            
            # Highland Scotland
            if lat >= 57.0:
                enhanced_tags.append("scottish highlands")
                if lng < -4.0:
                    enhanced_tags.append("west highlands")
                    enhanced_tags.append("northwest scotland")
                else:
                    enhanced_tags.append("east highlands")
                    enhanced_tags.append("northeast scotland")
            
            # Central Scotland
            elif 56.0 <= lat < 57.0:
                enhanced_tags.append("central scotland")
                
            # Southern Scotland
            else:
                enhanced_tags.append("southern scotland")
                if lng < -4.0:
                    enhanced_tags.append("southwest scotland")
                else:
                    enhanced_tags.append("southeast scotland")
                    
            # Check for specific landscape features in Scotland
            for tag in lowercase_tags:
                if "loch" in tag:
                    enhanced_tags.append("scottish loch")
                if "mountain" in tag or "hill" in tag:
                    enhanced_tags.append("scottish mountains")
                if "castle" in tag:
                    enhanced_tags.append("scottish castle")
                if "beach" in tag or "coast" in tag:
                    enhanced_tags.append("scottish coast")
        
        # England: roughly 50.0° to 55.0° N, -6.0° to 2.0° E
        elif 50.0 <= lat <= 55.0 and -6.0 <= lng <= 2.0:
            enhanced_tags.append("england")
            
            # Northern England
            if lat >= 53.5:
                enhanced_tags.append("northern england")
                if "lake" in lowercase_tags or "mountain" in lowercase_tags:
                    enhanced_tags.append("lake district")
            
            # Central England
            elif 52.0 <= lat < 53.5:
                enhanced_tags.append("central england")
                if "peak" in lowercase_tags or "hill" in lowercase_tags:
                    enhanced_tags.append("peak district")
            
            # Southern England
            else:
                enhanced_tags.append("southern england")
                if "coast" in lowercase_tags:
                    enhanced_tags.append("english coast")
            
        # Wales: roughly 51.3° to 53.4° N, -5.5° to -2.8° W
        elif 51.3 <= lat <= 53.4 and -5.5 <= lng <= -2.8:
            enhanced_tags.append("wales")
            if "mountain" in lowercase_tags:
                enhanced_tags.append("welsh mountains")
            if "snowdon" in lowercase_tags or "snowdonia" in lowercase_tags:
                enhanced_tags.append("snowdonia")
            if "coast" in lowercase_tags or "beach" in lowercase_tags:
                enhanced_tags.append("welsh coast")
                
        # Ireland: roughly 51.4° to 55.4° N, -10.5° to -6.0° W
        elif 51.4 <= lat <= 55.4 and -10.5 <= lng <= -6.0:
            # Northern Ireland
            if lat >= 54.0:
                enhanced_tags.append("northern ireland")
            # Republic of Ireland
            else:
                enhanced_tags.append("ireland")
                enhanced_tags.append("republic of ireland")
            
            if "coast" in lowercase_tags:
                enhanced_tags.append("irish coast")
            if "mountain" in lowercase_tags:
                enhanced_tags.append("irish mountains")
    
    # Add landscape features based on detected tags
    for feature in LANDSCAPE_FEATURES:
        if feature in lowercase_tags:
            # Don't add duplicates
            if feature not in enhanced_tags:
                enhanced_tags.append(feature)
    
    # Add weather conditions
    for condition in WEATHER_CONDITIONS:
        if condition in lowercase_tags:
            # Don't add duplicates
            if condition not in enhanced_tags:
                enhanced_tags.append(condition)
    
    # Remove duplicates while preserving order
    seen = set()
    return [tag for tag in enhanced_tags if not (tag in seen or seen.add(tag))]
